{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"filename\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _database = require(\"./database\");\n\nvar _collections = _interopRequireDefault(require(\"./routes/collections\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use((0, _cookieParser[\"default\"])());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public')));\napp.get('/bundle.js', function (req, res) {\n  res.sendFile('bundle.js', {\n    root: 'client/build/'\n  });\n});\napp.get('/manifest.json', function (req, res) {\n  res.sendFile('manifest.json', {\n    root: 'client/public/'\n  });\n});\napp.get('/style', function (req, res) {\n  res.sendFile('style.css', {\n    root: 'client/build/'\n  });\n});\napp.use('/api/collections', _collections[\"default\"]);\napp.get('/*', function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname + '/../public/index.html'), function (err) {\n    if (err) {\n      res.status(500).send(err);\n    }\n  });\n});\n\nfunction start() {\n  return _start.apply(this, arguments);\n}\n\nfunction _start() {\n  _start = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"STARTING SERVER...\");\n            (0, _database.setUpConnection)();\n            app.listen(5000, function () {\n              return console.log(\"started at \" + 5000);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _start.apply(this, arguments);\n}\n\nstart();\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImV4cHJlc3MiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwicm9vdCIsImNvbGxlY3Rpb25zIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsInN0YXJ0IiwiY29uc29sZSIsImxvZyIsImxpc3RlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBR0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUFzQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUU7QUFBWCxDQUF0QixDQUFSO0FBRUFMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLCtCQUFSO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRSyw4QkFBZUMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFmLENBQVI7QUFHQVQsR0FBRyxDQUFDVSxHQUFKLENBQVEsWUFBUixFQUFzQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDeENBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhLFdBQWIsRUFBMEI7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQVAsR0FBMUI7QUFDRCxDQUZEO0FBSUFkLEdBQUcsQ0FBQ1UsR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUM1Q0EsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWEsZUFBYixFQUE4QjtBQUFDQyxJQUFBQSxJQUFJLEVBQUU7QUFBUCxHQUE5QjtBQUNELENBRkQ7QUFJQWQsR0FBRyxDQUFDVSxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDcENBLEVBQUFBLEdBQUcsQ0FBQ0MsUUFBSixDQUFhLFdBQWIsRUFBMEI7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQVAsR0FBMUI7QUFDRCxDQUZEO0FBSUFkLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGtCQUFSLEVBQTRCYyx1QkFBNUI7QUFHQWYsR0FBRyxDQUFDVSxHQUFKLENBQVEsSUFBUixFQUFjLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFOLGlCQUFLQyxJQUFMLENBQVVDLFNBQVMsR0FBRyx1QkFBdEIsQ0FBYixFQUE2RCxVQUFVTyxHQUFWLEVBQWU7QUFDMUUsUUFBSUEsR0FBSixFQUFTO0FBQ1BKLE1BQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUNEO0FBQ0YsR0FKRDtBQUtELENBTkQ7O1NBUWVHLEs7Ozs7Ozs7MEJBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWjtBQUNBO0FBQ0FyQixZQUFBQSxHQUFHLENBQUNzQixNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLHFCQUFNRixPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBZ0IsSUFBNUIsQ0FBTjtBQUFBLGFBQWpCOztBQUhGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEc7Ozs7QUFPQUYsS0FBSztBQUVMSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFZpdGFsaXlcXERlc2t0b3BcXFdlYnN0b3JtUHJvamVjdHNcXGNoYW1waW9uc2hpcFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmltcG9ydCB7c2V0VXBDb25uZWN0aW9ufSBmcm9tIFwiLi9kYXRhYmFzZVwiO1xuaW1wb3J0IGNvbGxlY3Rpb25zIGZyb20gJy4vcm91dGVzL2NvbGxlY3Rpb25zJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOiB0cnVlfSkpO1xuXG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XG5cblxuYXBwLmdldCgnL2J1bmRsZS5qcycsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICByZXMuc2VuZEZpbGUoJ2J1bmRsZS5qcycsIHtyb290OiAnY2xpZW50L2J1aWxkLyd9KVxufSk7XG5cbmFwcC5nZXQoJy9tYW5pZmVzdC5qc29uJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gIHJlcy5zZW5kRmlsZSgnbWFuaWZlc3QuanNvbicsIHtyb290OiAnY2xpZW50L3B1YmxpYy8nfSk7XG59KTtcblxuYXBwLmdldCgnL3N0eWxlJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gIHJlcy5zZW5kRmlsZSgnc3R5bGUuY3NzJywge3Jvb3Q6ICdjbGllbnQvYnVpbGQvJ30pO1xufSk7XG5cbmFwcC51c2UoJy9hcGkvY29sbGVjdGlvbnMnLCBjb2xsZWN0aW9ucyk7XG5cblxuYXBwLmdldCgnLyonLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUgKyAnLy4uL3B1YmxpYy9pbmRleC5odG1sJyksIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpXG4gICAgfVxuICB9KVxufSk7XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0KCkge1xuICBjb25zb2xlLmxvZyhcIlNUQVJUSU5HIFNFUlZFUi4uLlwiKVxuICBzZXRVcENvbm5lY3Rpb24oKTtcbiAgYXBwLmxpc3Rlbig1MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcInN0YXJ0ZWQgYXQgXCIgKyA1MDAwKSk7XG59XG5cblxuc3RhcnQoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "express",
        "path",
        "join",
        "__dirname",
        "get",
        "req",
        "res",
        "sendFile",
        "root",
        "collections",
        "err",
        "status",
        "send",
        "start",
        "console",
        "log",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAGAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AAEAL,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQK,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAGAT,GAAG,CAACU,GAAJ,CAAQ,YAAR,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACxCA,EAAAA,GAAG,CAACC,QAAJ,CAAa,WAAb,EAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B;AACD,CAFD;AAIAd,GAAG,CAACU,GAAJ,CAAQ,gBAAR,EAA0B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC5CA,EAAAA,GAAG,CAACC,QAAJ,CAAa,eAAb,EAA8B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA9B;AACD,CAFD;AAIAd,GAAG,CAACU,GAAJ,CAAQ,QAAR,EAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACpCA,EAAAA,GAAG,CAACC,QAAJ,CAAa,WAAb,EAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B;AACD,CAFD;AAIAd,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA4Bc,uBAA5B;AAGAf,GAAG,CAACU,GAAJ,CAAQ,IAAR,EAAc,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAChCA,EAAAA,GAAG,CAACC,QAAJ,CAAaN,iBAAKC,IAAL,CAAUC,SAAS,GAAG,uBAAtB,CAAb,EAA6D,UAAUO,GAAV,EAAe;AAC1E,QAAIA,GAAJ,EAAS;AACPJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACD;AACF,GAJD;AAKD,CAND;;SAQeG,K;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA;AACArB,YAAAA,GAAG,CAACsB,MAAJ,CAAW,IAAX,EAAiB;AAAA,qBAAMF,OAAO,CAACC,GAAR,CAAY,gBAAgB,IAA5B,CAAN;AAAA,aAAjB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOAF,KAAK;AAELI,MAAM,CAACC,OAAP,GAAiBxB,GAAjB",
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "sourcesContent": [
        "import express from 'express';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport path from 'path';\n\nimport {setUpConnection} from \"./database\";\nimport collections from './routes/collections';\n\nconst app = express();\n\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\n\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n\napp.get('/bundle.js', function (req, res) {\n  res.sendFile('bundle.js', {root: 'client/build/'})\n});\n\napp.get('/manifest.json', function (req, res) {\n  res.sendFile('manifest.json', {root: 'client/public/'});\n});\n\napp.get('/style', function (req, res) {\n  res.sendFile('style.css', {root: 'client/build/'});\n});\n\napp.use('/api/collections', collections);\n\n\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname + '/../public/index.html'), function (err) {\n    if (err) {\n      res.status(500).send(err)\n    }\n  })\n});\n\nasync function start() {\n  console.log(\"STARTING SERVER...\")\n  setUpConnection();\n  app.listen(5000, () => console.log(\"started at \" + 5000));\n}\n\n\nstart();\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580841430319
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"filename\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\database.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setUpConnection = setUpConnection;\nexports.closeDataBase = closeDataBase;\nexports.dbUrl = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar dbUrl = 'mongodb://localhost:27017/Championships';\nexports.dbUrl = dbUrl;\n\nfunction setUpConnection() {\n  console.log(\"Connecting DB\");\n\n  _mongoose[\"default\"].connect(dbUrl, {\n    useNewUrlParser: true,\n    useFindAndModify: false\n  }).then(function () {\n    console.log(\"DataBase is ready!\");\n  })[\"catch\"](function (err) {\n    console.log('Error on database: ' + err.stack);\n    process.exit(1);\n  });\n}\n\nfunction closeDataBase() {\n  _mongoose[\"default\"].connection.close();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImRiVXJsIiwic2V0VXBDb25uZWN0aW9uIiwiY29uc29sZSIsImxvZyIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZUZpbmRBbmRNb2RpZnkiLCJ0aGVuIiwiZXJyIiwic3RhY2siLCJwcm9jZXNzIiwiZXhpdCIsImNsb3NlRGF0YUJhc2UiLCJjb25uZWN0aW9uIiwiY2xvc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7O0FBQ08sSUFBTUEsS0FBSyxHQUFHLHlDQUFkOzs7QUFHQSxTQUFTQyxlQUFULEdBQTBCO0FBQy9CQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaOztBQUNBQyx1QkFBU0MsT0FBVCxDQUFpQkwsS0FBakIsRUFDRTtBQUFDTSxJQUFBQSxlQUFlLEVBQUUsSUFBbEI7QUFBd0JDLElBQUFBLGdCQUFnQixFQUFFO0FBQTFDLEdBREYsRUFDb0RDLElBRHBELENBQ3lELFlBQU07QUFDN0ROLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaO0FBQ0QsR0FIRCxXQUlTLFVBQUNNLEdBQUQsRUFBUztBQUNkUCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBd0JNLEdBQUcsQ0FBQ0MsS0FBeEM7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYjtBQUNELEdBUEg7QUFRRDs7QUFFTSxTQUFTQyxhQUFULEdBQXlCO0FBQzlCVCx1QkFBU1UsVUFBVCxDQUFvQkMsS0FBcEI7QUFDRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFZpdGFsaXlcXERlc2t0b3BcXFdlYnN0b3JtUHJvamVjdHNcXGNoYW1waW9uc2hpcFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuZXhwb3J0IGNvbnN0IGRiVXJsID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvQ2hhbXBpb25zaGlwcyc7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFVwQ29ubmVjdGlvbigpe1xyXG4gIGNvbnNvbGUubG9nKFwiQ29ubmVjdGluZyBEQlwiKVxyXG4gIG1vbmdvb3NlLmNvbm5lY3QoZGJVcmwsXHJcbiAgICB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZX0pLnRoZW4oKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJEYXRhQmFzZSBpcyByZWFkeSFcIik7XHJcbiAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdFcnJvciBvbiBkYXRhYmFzZTogJyArIGVyci5zdGFjayk7XHJcbiAgICAgIHByb2Nlc3MuZXhpdCgxKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xvc2VEYXRhQmFzZSgpIHtcclxuICBtb25nb29zZS5jb25uZWN0aW9uLmNsb3NlKCk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "dbUrl",
        "setUpConnection",
        "console",
        "log",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useFindAndModify",
        "then",
        "err",
        "stack",
        "process",
        "exit",
        "closeDataBase",
        "connection",
        "close"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AACO,IAAMA,KAAK,GAAG,yCAAd;;;AAGA,SAASC,eAAT,GAA0B;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACAC,uBAASC,OAAT,CAAiBL,KAAjB,EACE;AAACM,IAAAA,eAAe,EAAE,IAAlB;AAAwBC,IAAAA,gBAAgB,EAAE;AAA1C,GADF,EACoDC,IADpD,CACyD,YAAM;AAC7DN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAHD,WAIS,UAACM,GAAD,EAAS;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBM,GAAG,CAACC,KAAxC;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,GAPH;AAQD;;AAEM,SAASC,aAAT,GAAyB;AAC9BT,uBAASU,UAAT,CAAoBC,KAApB;AACD",
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nexport const dbUrl = 'mongodb://localhost:27017/Championships';\r\n\r\n\r\nexport function setUpConnection(){\r\n  console.log(\"Connecting DB\")\r\n  mongoose.connect(dbUrl,\r\n    {useNewUrlParser: true, useFindAndModify: false}).then(() => {\r\n    console.log(\"DataBase is ready!\");\r\n  })\r\n    .catch((err) => {\r\n      console.log('Error on database: ' + err.stack);\r\n      process.exit(1);\r\n    });\r\n}\r\n\r\nexport function closeDataBase() {\r\n  mongoose.connection.close();\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581342049241
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"filename\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\\\\routes\\\\collections.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes\\collections.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes\\collections.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes\\collections.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes",
        "sourceFileName": "collections.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _crud = require(\"../crud\");\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _Promise = require('promise');\n\nvar router = require('express').Router(); //Це не дуже хороший код.\n\n\nrouter.get(\"/metadata\",\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res, next) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"Getting metadata..\");\n            response = [];\n            _context3.next = 4;\n            return Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"../schemas/\" + req.query.table)));\n            }).then(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(Table) {\n                var collection, keysList;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        collection = Table[req.query.table];\n                        collection.schema.eachPath(function (path) {\n                          //руками виключаю поля які не треба заповнювати користувачу.\n                          if (path !== '_id' && path !== '__v' && !path.includes('Parent') && path !== 'teams' && path !== 'players') {\n                            console.log(path);\n                            response.push(path);\n                          }\n                        }); // console.log(req.query.requireParents);\n\n                        if (!(req.query.requireParents && collection.schema.paths.hasOwnProperty('Parents'))) {\n                          _context2.next = 7;\n                          break;\n                        }\n\n                        _context2.next = 5;\n                        return _Promise.all(collection.schema.tree.Parents.map(\n                        /*#__PURE__*/\n                        function () {\n                          var _ref3 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee(Parent) {\n                            return regeneratorRuntime.wrap(function _callee$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                    _context.next = 2;\n                                    return (0, _crud.findParentKeys)(Parent.ParentName[\"default\"]);\n\n                                  case 2:\n                                    return _context.abrupt(\"return\", _context.sent);\n\n                                  case 3:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _callee);\n                          }));\n\n                          return function (_x5) {\n                            return _ref3.apply(this, arguments);\n                          };\n                        }()));\n\n                      case 5:\n                        keysList = _context2.sent;\n                        response = response.concat(keysList);\n\n                      case 7:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }())[\"catch\"](function (err) {\n              res.json(\"Error \" + err);\n            });\n\n          case 4:\n            res.json(response);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.post(\"/\",\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res, next) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"Posting new data...\");\n            console.log(req.query.table);\n            _context4.next = 4;\n            return (0, _crud.create)(req.query.table, req.body);\n\n          case 4:\n            response = _context4.sent;\n            res.status(200).send(response);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter.get(\"/extract\",\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res, next) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(\"extracting...\");\n            console.log(req.query);\n            _context5.next = 4;\n            return (0, _crud.extractData)(req.query.table, req.query.field, req.query.value, req.query.projection, req.query.sort);\n\n          case 4:\n            response = _context5.sent;\n            res.send(response);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nrouter.put(\"/\",\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res, next) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log(\"updating...\");\n            console.log(req.query);\n            _context6.next = 4;\n            return (0, _crud.updateData)(req.query.table, req.query.field, req.body.newData);\n\n          case 4:\n            response = _context6.sent;\n            res.send(response);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x12, _x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"](\"/\",\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(req, res, next) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            console.log(\"deleting...\");\n            console.log(req.query);\n            _context7.next = 4;\n            return (0, _crud.deleteData)(req.query.table, req.query.field, req.query.value);\n\n          case 4:\n            response = _context7.sent;\n            res.send(response);\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x15, _x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}());\nrouter.get(\"/\", function (req, res, next) {\n  console.log(\"Getting tables names..\");\n  var list = [];\n  fs.readdirSync('./src/schemas').forEach(\n  /*#__PURE__*/\n  function () {\n    var _ref8 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(filename, index) {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              filename = filename.replace(/\\.[^.]+$/, '');\n              console.log(filename);\n              list[index] = filename;\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x18, _x19) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n  res.json(list);\n  /* mongoose.connection.db.listCollections().toArray(function (err, names) {\n     console.log(names);\n     res.json(names);\n   }); Бо можуть бути не створені*/\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "collections.js"
      ],
      "names": [
        "Promise",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "response",
        "query",
        "table",
        "then",
        "Table",
        "collection",
        "schema",
        "eachPath",
        "path",
        "includes",
        "push",
        "requireParents",
        "paths",
        "hasOwnProperty",
        "all",
        "tree",
        "Parents",
        "map",
        "Parent",
        "ParentName",
        "keysList",
        "concat",
        "err",
        "json",
        "post",
        "body",
        "status",
        "send",
        "field",
        "value",
        "projection",
        "sort",
        "put",
        "newData",
        "list",
        "fs",
        "readdirSync",
        "forEach",
        "filename",
        "index",
        "replace",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\routes",
      "sourcesContent": [
        "import {create, findParentKeys, extractData, updateData, deleteData} from \"../crud\";\nimport * as fs from 'fs';\n\nconst Promise = require('promise');\nconst router = require('express').Router();\n\n\n//Це не дуже хороший код.\nrouter.get(\"/metadata\", async function (req, res, next) {\n  console.log(\"Getting metadata..\");\n  let response = [];\n\n  await import(\"../schemas/\" + req.query.table).then(async (Table) => {\n\n    const collection = Table[req.query.table];\n\n    collection.schema.eachPath((path) => {\n      //руками виключаю поля які не треба заповнювати користувачу.\n      if (path !== '_id' && path !== '__v' && !path.includes('Parent') && path !== 'teams' && path !== 'players') {\n        console.log(path);\n        response.push(path);\n      }\n    });\n    // console.log(req.query.requireParents);\n    if (req.query.requireParents && collection.schema.paths.hasOwnProperty('Parents')) {\n      let keysList = await Promise.all(collection.schema.tree.Parents.map(async (Parent) => {\n        return await findParentKeys(Parent.ParentName.default)\n      }));\n      response = response.concat(keysList);\n    }\n  }).catch((err) => {\n    res.json(\"Error \" + err)\n  });\n  res.json(response);\n});\n\n\nrouter.post(\"/\", async function (req, res, next) {\n  console.log(\"Posting new data...\");\n  console.log(req.query.table);\n  const response = await create(req.query.table, req.body);\n  res.status(200).send(response)\n});\n\nrouter.get(\"/extract\", async function (req, res, next) {\n  console.log(\"extracting...\");\n  console.log(req.query);\n  const response = await extractData(req.query.table, req.query.field, req.query.value, req.query.projection, req.query.sort);\n  res.send(response);\n});\n\nrouter.put(\"/\", async function (req, res, next) {\n  console.log(\"updating...\");\n  console.log(req.query);\n  const response = await updateData(req.query.table, req.query.field, req.body.newData);\n  res.send(response);\n});\n\nrouter.delete(\"/\", async function (req, res, next) {\n  console.log(\"deleting...\");\n  console.log(req.query);\n  const response = await deleteData(req.query.table, req.query.field, req.query.value);\n  res.send(response);\n});\n\nrouter.get(\"/\", function (req, res, next) {\n  console.log(\"Getting tables names..\");\n  const list = [];\n  fs.readdirSync('./src/schemas').forEach(async (filename, index) => {\n    filename = filename.replace(/\\.[^.]+$/, '');\n    console.log(filename);\n    list[index] = filename;\n  });\n  res.json(list);\n  /* mongoose.connection.db.listCollections().toArray(function (err, names) {\n     console.log(names);\n     res.json(names);\n   }); Бо можуть бути не створені*/\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582887141142
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"filename\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\\\\src\\\\crud.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vitaliy\\\\Desktop\\\\WebstormProjects\\\\championship\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\crud.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\crud.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src\\crud.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
        "sourceFileName": "crud.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.updateData = updateData;\nexports.deleteData = deleteData;\nexports.getSchemasNames = getSchemasNames;\nexports.findParentKeys = findParentKeys;\nexports.extractData = extractData;\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction create(_x, _x2) {\n  return _create.apply(this, arguments);\n}\n\nfunction _create() {\n  _create = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(table, payload) {\n    return regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + table)));\n            }).then(\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(Table) {\n                var instance, _loop, i;\n\n                return regeneratorRuntime.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        instance = new Table[table](payload);\n                        _context2.next = 3;\n                        return instance.save();\n\n                      case 3:\n                        console.log(instance);\n\n                        if (!payload.hasOwnProperty(\"Parents\")) {\n                          _context2.next = 12;\n                          break;\n                        }\n\n                        _loop =\n                        /*#__PURE__*/\n                        regeneratorRuntime.mark(function _loop(i) {\n                          var ParentName;\n                          return regeneratorRuntime.wrap(function _loop$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  ParentName = payload.Parents[i].ParentName;\n                                  _context.next = 3;\n                                  return Promise.resolve().then(function () {\n                                    return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + ParentName)));\n                                  }).then(function (Parent) {\n                                    console.log(\"Parent\");\n                                    console.log(Parent[ParentName]);\n                                    Parent[ParentName].updateOne({\n                                      _id: payload.Parents[i]._id\n                                    }, {\n                                      $push: _defineProperty({}, Table[table].collection.collectionName, {\n                                        _id: instance._id\n                                      })\n                                    }).then(function (result, err) {\n                                      console.log(result);\n                                      console.log(\"Parent is set!\");\n                                    });\n                                  });\n\n                                case 3:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _loop);\n                        });\n                        i = 0;\n\n                      case 7:\n                        if (!(i < payload.Parents.length)) {\n                          _context2.next = 12;\n                          break;\n                        }\n\n                        return _context2.delegateYield(_loop(i), \"t0\", 9);\n\n                      case 9:\n                        i++;\n                        _context2.next = 7;\n                        break;\n\n                      case 12:\n                        return _context2.abrupt(\"return\", instance);\n\n                      case 13:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x15) {\n                return _ref.apply(this, arguments);\n              };\n            }())[\"catch\"](function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _create.apply(this, arguments);\n}\n\nfunction updateData(_x3, _x4, _x5) {\n  return _updateData.apply(this, arguments);\n} //Якщо запис містить батьків, то мапимо батьків, імпортуємо їх схеми, знаходимо запис батька по id,\n//звертаємось до массиву що містить дітей і оновлюємо дітей, витягуючи видаленого. Ну і просто видаляємо запис.\n\n\nfunction _updateData() {\n  _updateData = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(table, field, newData) {\n    return regeneratorRuntime.wrap(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + table)));\n            }).then(function (Table) {\n              return Table[table].updateOne({\n                _id: field\n              }, {\n                $set: newData\n              }).then(function (res) {\n                console.log(res);\n                return res;\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              });\n            });\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _updateData.apply(this, arguments);\n}\n\nfunction deleteData(_x6, _x7, _x8) {\n  return _deleteData.apply(this, arguments);\n}\n\nfunction _deleteData() {\n  _deleteData = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(table, field, value) {\n    return regeneratorRuntime.wrap(function _callee7$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + table)));\n            }).then(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(Table) {\n                return regeneratorRuntime.wrap(function _callee6$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (Table[table].schema.tree.hasOwnProperty(\"Parents\")) {\n                          //console.log(Table[table].schema.tree.Parents);\n                          Table[table].find(_defineProperty({}, field, value)).then(\n                          /*#__PURE__*/\n                          function () {\n                            var _ref3 = _asyncToGenerator(\n                            /*#__PURE__*/\n                            regeneratorRuntime.mark(function _callee5(children) {\n                              var _loop2, i;\n\n                              return regeneratorRuntime.wrap(function _callee5$(_context7) {\n                                while (1) {\n                                  switch (_context7.prev = _context7.next) {\n                                    case 0:\n                                      console.log(\"children: \");\n                                      console.log(children);\n                                      _loop2 =\n                                      /*#__PURE__*/\n                                      regeneratorRuntime.mark(function _loop2(i) {\n                                        return regeneratorRuntime.wrap(function _loop2$(_context6) {\n                                          while (1) {\n                                            switch (_context6.prev = _context6.next) {\n                                              case 0:\n                                                _context6.next = 2;\n                                                return Promise.all(children[i].Parents.map(\n                                                /*#__PURE__*/\n                                                function () {\n                                                  var _ref4 = _asyncToGenerator(\n                                                  /*#__PURE__*/\n                                                  regeneratorRuntime.mark(function _callee4(Parent) {\n                                                    return regeneratorRuntime.wrap(function _callee4$(_context5) {\n                                                      while (1) {\n                                                        switch (_context5.prev = _context5.next) {\n                                                          case 0:\n                                                            _context5.next = 2;\n                                                            return Promise.resolve().then(function () {\n                                                              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + Parent.ParentName)));\n                                                            }).then(function (ParentSchema) {\n                                                              console.log(ParentSchema[Parent.ParentName]);\n                                                              console.log(\"Id: \");\n                                                              console.log(Parent._id);\n                                                              ParentSchema[Parent.ParentName].update({\n                                                                _id: Parent._id\n                                                              }, {\n                                                                \"$pull\": _defineProperty({}, Table[table].collection.collectionName, {\n                                                                  _id: children[i]._id\n                                                                })\n                                                              }, {\n                                                                multi: true\n                                                              }).then(function (updatedParent) {})[\"catch\"](function (err) {\n                                                                return console.log(err);\n                                                              });\n                                                            });\n\n                                                          case 2:\n                                                          case \"end\":\n                                                            return _context5.stop();\n                                                        }\n                                                      }\n                                                    }, _callee4);\n                                                  }));\n\n                                                  return function (_x18) {\n                                                    return _ref4.apply(this, arguments);\n                                                  };\n                                                }()));\n\n                                              case 2:\n                                              case \"end\":\n                                                return _context6.stop();\n                                            }\n                                          }\n                                        }, _loop2);\n                                      });\n                                      i = 0;\n\n                                    case 4:\n                                      if (!(i < children.length)) {\n                                        _context7.next = 9;\n                                        break;\n                                      }\n\n                                      return _context7.delegateYield(_loop2(i), \"t0\", 6);\n\n                                    case 6:\n                                      i++;\n                                      _context7.next = 4;\n                                      break;\n\n                                    case 9:\n                                    case \"end\":\n                                      return _context7.stop();\n                                  }\n                                }\n                              }, _callee5);\n                            }));\n\n                            return function (_x17) {\n                              return _ref3.apply(this, arguments);\n                            };\n                          }())[\"catch\"](function (err) {\n                            return console.log(err);\n                          });\n                        }\n\n                        console.log(\"Deleting sign\");\n                        return _context8.abrupt(\"return\", Table[table].deleteMany(_defineProperty({}, field, value)).then(function (res) {\n                          console.log(res);\n                          return res;\n                        })[\"catch\"](function (err) {\n                          return console.log(err);\n                        }));\n\n                      case 3:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x16) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 2:\n            return _context9.abrupt(\"return\", _context9.sent);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _deleteData.apply(this, arguments);\n}\n\nfunction getSchemasNames() {\n  fs.readdirSync('./src/schemas').forEach(function (filename, index) {\n    filename = filename.replace(/\\.[^.]+$/, '');\n    list[index] = filename;\n  });\n  return list;\n} //В параметри приходить таблиця і зовнішіній ключ.\n//Шукаєм в цій таблиці назву батька, імпортуємо його схему і шукаємо в ньому всі ключі\n\n\nfunction findParentKeys(_x9) {\n  return _findParentKeys.apply(this, arguments);\n}\n\nfunction _findParentKeys() {\n  _findParentKeys = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(ParentName) {\n    return regeneratorRuntime.wrap(function _callee8$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + ParentName)));\n            }).then(function (Parent) {\n              return Parent[ParentName].find({}, {\n                _id: 1\n              }).then(function (keys) {\n                return _defineProperty({}, Parent[ParentName].collection.collectionName, keys);\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              });\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _findParentKeys.apply(this, arguments);\n}\n\nfunction extractData(_x10, _x11, _x12, _x13, _x14) {\n  return _extractData.apply(this, arguments);\n}\n\nfunction _extractData() {\n  _extractData = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(table, field, value, projection, sort) {\n    return regeneratorRuntime.wrap(function _callee9$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return Promise.resolve().then(function () {\n              return _interopRequireWildcard(require(\"\".concat(\"./schemas/\" + table)));\n            }).then(function (Table) {\n              if (projection) {\n                if (!Array.isArray(projection)) {\n                  projection = [projection];\n                }\n\n                projection = projection.reduce(function (result, item) {\n                  console.log(\"item\");\n                  result[item] = true;\n                  return result;\n                }, {});\n              }\n\n              return Table[table].find(_defineProperty({}, field, value), _objectSpread({\n                _id: 0\n              }, projection)).sort(_defineProperty({}, sort, \"asc\")).then(function (data) {\n                console.log(data);\n                return data;\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              });\n            })[\"catch\"](function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context11.abrupt(\"return\", _context11.sent);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _extractData.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "crud.js"
      ],
      "names": [
        "create",
        "table",
        "payload",
        "then",
        "Table",
        "instance",
        "save",
        "console",
        "log",
        "hasOwnProperty",
        "i",
        "ParentName",
        "Parents",
        "Parent",
        "updateOne",
        "_id",
        "$push",
        "collection",
        "collectionName",
        "result",
        "err",
        "length",
        "updateData",
        "field",
        "newData",
        "$set",
        "res",
        "deleteData",
        "value",
        "schema",
        "tree",
        "find",
        "children",
        "Promise",
        "all",
        "map",
        "ParentSchema",
        "update",
        "multi",
        "updatedParent",
        "deleteMany",
        "getSchemasNames",
        "fs",
        "readdirSync",
        "forEach",
        "filename",
        "index",
        "replace",
        "list",
        "findParentKeys",
        "keys",
        "extractData",
        "projection",
        "sort",
        "Array",
        "isArray",
        "reduce",
        "item",
        "data"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Vitaliy\\Desktop\\WebstormProjects\\championship\\src",
      "sourcesContent": [
        "import * as fs from \"fs\";\r\n\r\nexport async function create(table, payload) {\r\n  return await import(\"./schemas/\" + table).then(async (Table) => {\r\n\r\n    const instance = new Table[table](payload);\r\n    await instance.save();\r\n    console.log(instance);\r\n    if (payload.hasOwnProperty(\"Parents\")) {\r\n      for (let i = 0; i < payload.Parents.length; i++) {\r\n\r\n        const ParentName = payload.Parents[i].ParentName;\r\n\r\n        await import(\"./schemas/\" + ParentName).then((Parent) => {\r\n          console.log(\"Parent\");\r\n          console.log(Parent[ParentName]);\r\n          Parent[ParentName].updateOne({_id: payload.Parents[i]._id},\r\n            {$push: {[Table[table].collection.collectionName]: {_id: instance._id}}}).then((result, err) => {\r\n            console.log(result);\r\n            console.log(\"Parent is set!\")\r\n          })\r\n        });\r\n      }\r\n    }\r\n    return instance;\r\n  }).catch((err) => {\r\n    return err\r\n  });\r\n}\r\n\r\nexport async function updateData(table, field, newData) {\r\n\r\n  return await import(\"./schemas/\" + table).then((Table) => {\r\n    return Table[table].updateOne({_id: field}, {$set: newData}).then((res) => {\r\n        console.log(res);\r\n        return res\r\n      }\r\n    ).catch((err) => console.log(err));\r\n  })\r\n}\r\n\r\n//Якщо запис містить батьків, то мапимо батьків, імпортуємо їх схеми, знаходимо запис батька по id,\r\n//звертаємось до массиву що містить дітей і оновлюємо дітей, витягуючи видаленого. Ну і просто видаляємо запис.\r\nexport async function deleteData(table, field, value) {\r\n  return await import(\"./schemas/\" + table).then(async (Table) => {\r\n\r\n    if (Table[table].schema.tree.hasOwnProperty(\"Parents\")) {\r\n      //console.log(Table[table].schema.tree.Parents);\r\n\r\n      Table[table].find({[field]: value}).then(async (children) => {\r\n          console.log(\"children: \");\r\n          console.log(children);\r\n\r\n          for (let i = 0; i < children.length; i++) {\r\n\r\n            await Promise.all(children[i].Parents.map(async (Parent) => {\r\n\r\n              await import(\"./schemas/\" + Parent.ParentName).then((ParentSchema) => {\r\n\r\n                console.log(ParentSchema[Parent.ParentName]);\r\n                console.log(\"Id: \");\r\n                console.log(Parent._id);\r\n\r\n                ParentSchema[Parent.ParentName].update({_id: Parent._id},\r\n                  {\"$pull\": {[Table[table].collection.collectionName]: {_id: children[i]._id}}},\r\n                  {multi: true})\r\n                  .then((updatedParent) => {\r\n                    }\r\n                  ).catch((err) => console.log(err));\r\n\r\n\r\n              })\r\n            }))\r\n          }\r\n\r\n\r\n        }\r\n      ).catch((err) => console.log(err));\r\n    }\r\n\r\n    console.log(\"Deleting sign\");\r\n    return Table[table].deleteMany({[field]: value}).then((res) => {\r\n        console.log(res)\r\n        return res\r\n      }\r\n    ).catch((err) => console.log(err));\r\n  })\r\n\r\n\r\n  /*\r\n\r\n  */\r\n\r\n}\r\n\r\nexport function getSchemasNames() {\r\n  fs.readdirSync('./src/schemas').forEach((filename, index) => {\r\n    filename = filename.replace(/\\.[^.]+$/, '');\r\n    list[index] = filename;\r\n  });\r\n  return list;\r\n}\r\n\r\n//В параметри приходить таблиця і зовнішіній ключ.\r\n//Шукаєм в цій таблиці назву батька, імпортуємо його схему і шукаємо в ньому всі ключі\r\nexport async function findParentKeys(ParentName) {\r\n  return import(\"./schemas/\" + ParentName).then((Parent) => {\r\n\r\n    return Parent[ParentName].find({}, {_id: 1}).then((keys) => {\r\n\r\n        return {[Parent[ParentName].collection.collectionName]: keys}\r\n      }\r\n    ).catch((err) => console.log(err));\r\n  }).catch((err) => console.log(err));\r\n}\r\n\r\n\r\nexport async function extractData(table, field, value, projection, sort) {\r\n  return await import(\"./schemas/\" + table).then((Table) => {\r\n\r\n    if (projection) {\r\n      if (!Array.isArray(projection)) {\r\n        projection = [projection];\r\n      }\r\n\r\n      projection = projection.reduce(function (result, item) {\r\n        console.log(\"item\");\r\n        result[item] = true;\r\n        return result;\r\n      }, {});\r\n    }\r\n\r\n    return Table[table].find({[field]: value},\r\n      {_id: 0, ...projection}).sort({[sort]: \"asc\"})\r\n      .then((data) => {\r\n          console.log(data);\r\n          return data;\r\n        }\r\n      ).catch((err) => console.log(err));\r\n  }).catch((err) => {\r\n    return err\r\n  });\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582894689860
  }
}